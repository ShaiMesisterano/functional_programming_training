/* global define */
define([
    'jquery'
    , 'ramda'
    , 'pointfree'
    , 'Maybe'
    , 'player'
    , 'io'
    , 'bacon'
    , 'http'
], function($, _, P, Maybe, Player, io, bacon, http) {
    'use strict';
    io.extendFn();

    // HELPERS ///////////////////////////////////////////
    var compose = P.compose;
    var map = P.map;
    var log = function(x) { console.log(x); return x; }
    var fork = _.curry(function(f, future) { return future.fork(log, f); })
    var setHtml = _.curry(function(sel, x) { return $(sel).html(x); });

    // PURE //////////////////////////////////////////////////
    var listen = _.curry(function(type, el){
	return Bacon.fromEventTarget(el, type);
    });
    // getDom :: String -> IO Dom
    var getDom = $.toIO();
    // keypressStream :: Dom -> EventStream DomEvent
    var keypressStream = listen('keyup');
    
    // eventValue :: DomEvent -> String
    var eventValue = compose(_.get('value'), _.get('target'));
    
    // valueSream :: Dom -> EventStream String
    var valueStream = compose(map(eventValue), keypressStream);

    // termUrl :: String -> URL
    var termUrl = function(term){
	return 'http://gdata.youtube.com/feeds/api/videos?' + $.param({q: term, alt: 'json'});
    };
    
    // urlStream :: Dom -> EventStream URL
    var urlStream = compose(map(termUrl), valueStream);
	    
    // IMPURE /////////////////////////////////////////////////////
    getDom('#search').map(urlStream).runIO().onValue(log);

});
